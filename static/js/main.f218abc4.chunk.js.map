{"version":3,"sources":["components/buttons/CalculatorBtn.js","components/display/Display.js","components/Calculator.js","App.js","index.js"],"names":["CalculatorButton","this","props","number","clickHandler","className","onClick","type","value","React","Component","Display","Calculator","e","setState","currentValue","target","state","numbers","Array","from","keys","reverse","special","operators","decimalDot","bind","numBtns","map","num","toString","specialBtns","btn","operatorBtns","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIqBA,E,4JACnB,WACE,MAAiCC,KAAKC,MAA9BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAChB,OACE,wBACEC,UAAS,cAASF,GAClBG,QAASF,EACTG,KAAK,SACLC,MAAOL,EAJT,SAMGA,Q,GAVqCM,IAAMC,WCC/BC,G,kKACnB,WACE,IAAQR,EAAWF,KAAKC,MAAhBC,OACR,OACE,qBACEE,UAAU,oBACVG,MAAOL,EAFT,SAIGA,Q,GAR4BM,IAAMC,YCAtBE,E,kDACnB,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAWRE,aAAe,SAACS,GACd,EAAKC,SAAS,CAAEC,aAAcF,EAAEG,OAAOR,SAXvC,EAAKS,MAAQ,CACXF,aAAc,IACdG,QAASC,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,UACtCC,QAAS,CAAC,KAAM,MAAO,KACvBC,UAAW,CAAC,OAAK,IAAK,IAAK,IAAK,KAChCC,WAAY,KAEd,EAAKrB,aAAe,EAAKA,aAAasB,KAAlB,gBATH,E,0CAgBnB,WAAU,IAAD,OACP,EAEIzB,KAAKgB,MADPC,EADF,EACEA,QAASO,EADX,EACWA,WAAYF,EADvB,EACuBA,QAASC,EADhC,EACgCA,UAAWT,EAD3C,EAC2CA,aAErCY,EAAUT,EAAQU,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAEE1B,OAAQ0B,EAAIC,WACZ1B,aAAc,EAAKA,cAFdyB,MAKHE,EAAcR,EAAQK,KAAI,SAACI,GAAD,OAC9B,cAAC,EAAD,CAEE7B,OAAQ6B,EAAIF,WACZ1B,aAAc,EAAKA,cAFd4B,MAKHC,EAAeT,EAAUI,KAAI,SAACI,GAAD,OACjC,cAAC,EAAD,CAEE7B,OAAQ6B,EAAIF,WACZ1B,aAAc,EAAKA,cAFd4B,MAKT,OACE,sBAAK3B,UAAU,iBAAf,UACE,cAAC,EAAD,CAASF,OAAQY,IACjB,oBAAIV,UAAU,oBAAd,SACG0B,IAEH,qBAAI1B,UAAU,oBAAd,UACGsB,EACD,cAAC,EAAD,CACEtB,UAAU,UACVE,KAAK,SACLH,aAAcH,KAAKG,aACnBD,OAAQsB,OAGZ,oBAAIpB,UAAU,qBAAd,SACG4B,W,GA1D6BxB,IAAMC,WCFzBwB,E,kDACnB,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,GAFI,E,0CAKnB,WACE,OACE,cAAC,EAAD,Q,GAR2BR,IAAMC,WCCvCyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f218abc4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class CalculatorButton extends React.Component {\n  render() {\n    const { number, clickHandler } = this.props;\n    return (\n      <button\n        className={`btn-${number}`}\n        onClick={clickHandler}\n        type=\"button\"\n        value={number}\n      >\n        {number}\n      </button>\n    );\n  }\n}\n\nCalculatorButton.propTypes = {\n  number: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n","import './displayStyle.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Display extends React.Component {\n  render() {\n    const { number } = this.props;\n    return (\n      <div\n        className=\"display-container\"\n        value={number}\n      >\n        {number}\n      </div>\n    );\n  }\n}\n\nDisplay.propTypes = {\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './calculatorStyle.scss';\nimport CalculatorButton from './buttons/CalculatorBtn';\nimport Display from './display/Display';\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentValue: '0',\n      numbers: Array.from(Array(10).keys()).reverse(),\n      special: ['AC', '+/-', '%'],\n      operators: ['รท', '*', '-', '+', '='],\n      decimalDot: '.',\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  clickHandler = (e) => {\n    this.setState({ currentValue: e.target.value });\n  }\n\n  render() {\n    const {\n      numbers, decimalDot, special, operators, currentValue,\n    } = this.state;\n    const numBtns = numbers.map((num) => (\n      <CalculatorButton\n        key={num}\n        number={num.toString()}\n        clickHandler={this.clickHandler}\n      />\n    ));\n    const specialBtns = special.map((btn) => (\n      <CalculatorButton\n        key={btn}\n        number={btn.toString()}\n        clickHandler={this.clickHandler}\n      />\n    ));\n    const operatorBtns = operators.map((btn) => (\n      <CalculatorButton\n        key={btn}\n        number={btn.toString()}\n        clickHandler={this.clickHandler}\n      />\n    ));\n    return (\n      <div className=\"main-container\">\n        <Display number={currentValue} />\n        <ul className=\"special-container\">\n          {specialBtns}\n        </ul>\n        <ul className=\"numbers-container\">\n          {numBtns}\n          <CalculatorButton\n            className=\"dot-btn\"\n            type=\"button\"\n            clickHandler={this.clickHandler}\n            number={decimalDot}\n          />\n        </ul>\n        <ul className=\"operator-container\">\n          {operatorBtns}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Calculator from './components/Calculator';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Calculator />\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}